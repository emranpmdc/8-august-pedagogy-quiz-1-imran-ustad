<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SST Tests Preparation</title>
    <!-- Use Tailwind CSS for modern, responsive styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Include html2canvas for capturing the result as a PNG -->
    <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
    <style>
        /* Define a custom font family for Georgia */
        .font-georgia {
            font-family: Georgia, serif;
        }

        /* Style for the custom modal box */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.75);
            backdrop-filter: blur(5px);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 100;
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
        }

        .modal-overlay.active {
            opacity: 1;
        }

        .modal-content {
            background-color: #ffffff;
            padding: 2.5rem;
            border-radius: 1rem;
            text-align: center;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
            transform: translateY(-50px);
            opacity: 0;
            transition: all 0.3s ease-in-out;
        }
        
        .modal-overlay.active .modal-content {
            transform: translateY(0);
            opacity: 1;
        }

        /* Button Gradient for Submit */
        .submit-btn {
            background-image: linear-gradient(to right, #10b981, #059669);
            transition: all 0.3s ease;
        }
        .submit-btn:hover {
            box-shadow: 0 4px 15px rgba(5, 150, 105, 0.4);
        }

        /* Option Hover and Selected Effect with new dark green color and no zoom */
        .quiz-option-label {
            transition: all 0.3s ease-in-out;
        }
        
        /* Change background on hover */
        .quiz-option-label:hover {
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            background-color: #059669; /* Dark green background */
        }
        
        /* Change text color to white on hover */
        .quiz-option-label:hover span {
            color: #ffffff;
        }
        
        /* Selected option styling */
        .quiz-option-label.selected {
            background-color: #059669; /* Dark green background */
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        }
        
        /* Ensures text inside selected option is white */
        .quiz-option-label.selected span {
            color: #ffffff;
        }
        
        /* Hide the default radio button while keeping it functional */
        .quiz-option-label input[type="radio"] {
            display: none;
        }
        
        /* Adjust main layout to ensure all components fit on screen */
        .main-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            flex-grow: 1; /* Allows the container to fill available space */
            padding-top: 1rem;
            padding-bottom: 1rem;
        }

        /* On smaller screens, adjust padding to prevent content overflow */
        @media (max-width: 640px) {
            .quiz-content-wrapper {
                padding: 1rem;
            }
        }
        
        /* No zoom effect on buttons */
        .no-zoom:hover {
            transform: none !important;
        }
        
        /* Style for the temporary div used for image generation */
        #download-result-container {
            position: absolute;
            top: -9999px; /* Hide off-screen */
            left: -9999px;
            width: 800px; /* A fixed width for consistent image output */
            background-color: white;
            padding: 2rem;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        #download-result-container .header-clone,
        #download-result-container .footer-clone {
            text-align: center;
            padding: 1rem;
            background-color: #10b981;
            color: white;
        }
        #download-result-container .results-clone {
            padding: 2rem;
            text-align: center;
        }
        #download-result-container .results-clone p,
        #download-result-container .results-clone h2 {
            text-align: center;
        }
        #download-result-container .results-clone .mb-3 {
            margin-bottom: 0.75rem;
        }
        #download-result-container .results-clone .mb-6 {
            margin-bottom: 1.5rem;
        }

        /* New styling for the full quiz review section */
        .quiz-review-item {
            border: 1px solid #e5e7eb;
            border-radius: 0.5rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            background-color: #fafafa;
        }

        .quiz-review-question {
            font-weight: 700;
            color: #1f2937;
            margin-bottom: 0.75rem;
            font-size: 1.125rem; /* text-lg */
        }

        .quiz-review-option {
            padding: 0.5rem;
            border-radius: 0.375rem;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .quiz-review-option.correct {
            background-color: #dcfce7; /* green-100 */
            color: #065f46; /* green-800 */
            font-weight: 600;
        }
        .quiz-review-option.incorrect {
            background-color: #fee2e2; /* red-100 */
            color: #991b1b; /* red-800 */
        }
        
        /* --- FIX: Updated the media print query to correctly display the results container --- */
        @media print {
            /* Hide the main header and footer, as well as the button container */
            .no-print,
            #name-entry-container,
            #quiz-content-wrapper {
                display: none !important;
            }
            
            /* Ensure the main container holding the results is fully visible and styled for printing */
            .container {
                box-shadow: none !important;
                border: none !important;
                padding: 0 !important;
                margin: 0 !important;
                width: auto !important;
                max-width: none !important;
                height: auto !important;
            }

            /* Ensure the results container itself is visible and formatted for a clean printout */
            #results-container {
                display: block !important;
                box-shadow: none !important;
                border: none !important;
                padding: 0 !important;
                margin: 0 !important;
                background-color: #ffffff !important;
            }
        }

        /* Custom CSS for the video container to maintain a 16:9 aspect ratio */
        .video-container {
            position: relative;
            padding-bottom: 56.25%; /* 16:9 aspect ratio */
            height: 0;
            overflow: hidden;
            max-width: 100%;
            background: #000;
            border-radius: 1rem;
        }

        .video-container iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        /* Styling for the question number circle */
        .question-number-circle {
            display: inline-flex;
            justify-content: center;
            align-items: center;
            width: 30px; /* Adjust size as needed */
            height: 30px; /* Adjust size as needed */
            border-radius: 50%;
            background-color: #059669; /* Green color */
            color: #ffffff; /* White text */
            font-weight: bold;
            margin-right: 10px;
            flex-shrink: 0; /* Prevent shrinking */
        }
    </style>
</head>
<body class="bg-gradient-to-br from-emerald-50 to-green-100 min-h-screen flex flex-col justify-between items-center">

    <!-- Stylized Green Header Label with user info -->
    <div id="header" class="no-print w-full bg-gradient-to-r from-green-700 to-emerald-600 text-white text-center py-5 text-4xl font-extrabold rounded-b-3xl">
        SSTs Test Preparation 2025
        <h3 class="text-xl font-semibold mt-2">By Imran Ustad</h3>
        <p class="text-base">WhatsApp: 03345501369</p>
        <p class="text-base mt-1">
            <a href="https://www.youtube.com/@TheImranUstad" target="_blank" rel="noopener noreferrer" class="text-white hover:text-gray-200 transition-colors">
                https://www.youtube.com/@TheImranUstad
            </a>
        </p>
    </div>

    <!-- Main quiz container with enhanced styling -->
    <div class="container max-w-5xl mx-auto rounded-3xl shadow-2xl bg-white p-8 sm:p-12 my-8 flex-1 flex flex-col justify-center items-center">
        
        <!-- Name entry container (initial screen) -->
        <div id="name-entry-container" class="w-full max-w-md text-center p-8 bg-gray-50 rounded-3xl shadow-inner border-t-4 border-green-500">
            <h2 class="text-3xl font-extrabold text-green-700 mb-6">Welcome to the Quiz!</h2>
            <p class="text-lg text-gray-700 mb-4">Please enter your name to begin.</p>
            <input type="text" id="name-input" placeholder="Enter your name" class="w-full px-4 py-3 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 mb-6 text-center text-lg">
            <button id="start-btn" class="w-full text-white font-bold py-3.5 rounded-full shadow-lg transition-colors bg-blue-600 hover:bg-blue-700 no-zoom">
                Start Quiz
            </button>
        </div>
        
        <!-- Quiz content wrapper (initially hidden) -->
        <div id="quiz-content-wrapper" class="hidden w-full">
            <!-- Controls and Timer section (Reversed for right alignment) -->
            <div class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
                <!-- This div is for navigation buttons (currently empty) -->
                <div class="flex gap-4">
                    <!-- Navigation buttons will be dynamically shown here -->
                </div>
                <!-- Timer is now on the right -->
                <div class="flex items-center space-x-3">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-red-600" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                    </svg>
                    <span class="text-xl font-semibold text-gray-700">Time Left:</span>
                    <span id="timer" class="text-3xl font-bold text-red-600 bg-red-100 px-5 py-2.5 rounded-xl shadow-inner">60:00</span>
                </div>
            </div>

            <!-- Quiz questions container -->
            <div id="quiz-form" class="space-y-4">
                <!-- Questions and navigation buttons will be dynamically inserted here by JavaScript -->
            </div>
        </div>

        <!-- Results container (initially hidden) -->
        <div id="results-container" class="hidden mt-8 p-8 bg-gray-50 rounded-3xl shadow-inner border-t-4 border-green-500 w-full">
            <h2 class="text-2xl sm:text-3xl font-extrabold text-center mb-4 text-green-700">Quiz Results</h2>
            <p class="text-lg mb-3 text-center">
                <span id="user-name-result" class="font-extrabold text-green-600"></span>
            </p>
            <p class="text-lg mb-3">
                Total Questions: <span id="total-questions" class="font-extrabold text-green-600"></span>
            </p>
            <p class="text-lg mb-6">
                Obtained Marks: <span id="obtained-marks" class="font-extrabold text-green-600"></span>
            </p>

            <!-- Video Container - Moved to appear on the results page -->
            <div class="w-full mx-auto my-8">
                <div class="bg-white p-6 rounded-3xl shadow-2xl">
                    <h3 class="text-xl sm:text-2xl font-extrabold text-center mb-6 text-green-700">Preparation Guide: KPPSC SST Syllabus 2025</h3>
                    <div class="video-container">
                        <iframe width="695" height="391" src="https://www.youtube.com/embed/sFzdY39_Kw8" title="KPPSC SST Syllabus 2025 KPK | SST General, Maths-Physics, Bio-Chem | Past Papers &amp; Preparation Guide" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                    </div>
                </div>
            </div>

            <div id="full-quiz-review" class="mt-8">
                <h3 class="text-xl font-bold text-gray-700 mb-4">Quiz Review:</h3>
                <!-- The full quiz review will be displayed here -->
            </div>
            
            <!-- Button container for the new download button and the print button -->
            <div class="no-print flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4 mt-8">
                <!-- Download button for results as PNG -->
                <button id="download-btn" class="w-full bg-indigo-600 text-white font-bold py-3.5 rounded-full shadow-md hover:bg-indigo-700 transition-colors no-zoom">
                    Download Result Card (PNG)
                </button>
                <!-- Print Result button -->
                <button id="print-btn" class="w-full bg-blue-600 text-white font-bold py-3.5 rounded-full shadow-md hover:bg-blue-700 transition-colors no-zoom">
                    Print Result
                </button>
            </div>
        </div>

    </div>

    <!-- Custom modal for validation/errors -->
    <div id="validation-modal" class="modal-overlay hidden">
        <div class="modal-content">
            <p id="modal-message" class="text-xl font-semibold mb-6 text-gray-800"></p>
            <button id="modal-close-btn" class="bg-red-500 text-white font-bold py-2.5 px-6 rounded-full hover:bg-red-600 transition-colors no-zoom">
                Close
            </button>
        </div>
    </div>
    
    <!-- Updated Green Footer Label with enhanced styling -->
    <footer id="footer" class="no-print w-full bg-gradient-to-r from-green-700 to-emerald-600 text-white text-center py-6 text-2xl font-semibold rounded-t-3xl">
        <h3 class="text-2xl font-extrabold mb-1">By Imran Ustad</h3>
        <p class="text-base mb-1">WhatsApp: 03345501369</p>
        <p class="text-base">
            <a href="https://www.youtube.com/@TheImranUstad" target="_blank" rel="noopener noreferrer" class="text-white hover:text-gray-200 transition-colors">
                https://www.youtube.com/@TheImranUstad
            </a>
        </p>
    </footer>

    <script>
        // Array of 60 MCQs on Teaching Methods and Strategies
        const allQuestions = [
            // Teacher-Centered Methods (Lecture, Demonstration) - 20 questions
            { question: "1. In a lecture method, the primary role of the teacher is to:", options: ["Facilitate group discussions", "Present information to students", "Guide student-led projects", "Observe student interactions"], correct: 1 },
            { question: "2. Which of the following is a characteristic of the lecture method?", options: ["High student engagement", "Teacher as the main source of information", "Focus on practical skills", "Collaborative learning"], correct: 1 },
            { question: "3. The lecture method is most effective for:", options: ["Developing critical thinking", "Covering a large amount of content quickly", "Promoting student autonomy", "Encouraging peer teaching"], correct: 1 },
            { question: "4. A disadvantage of the lecture method is that it can lead to:", options: ["Increased student participation", "Passive learning and lack of engagement", "Better retention of complex ideas", "Enhanced problem-solving skills"], correct: 1 },
            { question: "5. When a teacher uses a demonstration method, they are primarily:", options: ["Asking students to explain concepts", "Showing how to do something", "Assigning independent research", "Leading a debate"], correct: 1 },
            { question: "6. The demonstration method is particularly useful for teaching:", options: ["Abstract theories", "Procedural skills or processes", "Historical facts", "Literary analysis"], correct: 1 },
            { question: "7. A key benefit of the demonstration method is that it:", options: ["Allows students to discover concepts independently", "Provides a clear visual and practical example", "Relies heavily on student prior knowledge", "Promotes competitive learning"], correct: 1 },
            { question: "8. For an effective demonstration, the teacher should:", options: ["Perform quickly without explanation", "Ensure all students can clearly see and hear", "Only explain after the demonstration", "Use complex jargon"], correct: 1 },
            { question: "9. Which of these is a common feature of teacher-centered methods?", options: ["Student autonomy", "Teacher control over content and pace", "Emphasis on student collaboration", "Discovery learning"], correct: 1 },
            { question: "10. In a teacher-centered classroom, feedback is primarily provided by:", options: ["Peers", "The teacher", "Self-assessment", "External experts"], correct: 1 },
            { question: "11. The lecture method is often supplemented with visual aids to:", options: ["Distract students", "Make the content more engaging and understandable", "Increase the speaking time of the teacher", "Reduce the need for student questions"], correct: 1 },
            { question: "12. What is a primary goal of a well-executed demonstration?", options: ["To test students' prior knowledge", "To illustrate a concept or procedure clearly", "To encourage memorization of facts", "To promote individual competition"], correct: 1 },
            { question: "13. When using the lecture method, effective teachers often:", options: ["Avoid eye contact with students", "Speak in a monotone voice", "Vary their tone, pace, and incorporate questions", "Read directly from notes"], correct: 2 },
            { question: "14. A demonstration is most effective when students are:", options: ["Already experts on the topic", "Actively observing and asking clarifying questions", "Engaged in unrelated activities", "Expected to memorize steps without understanding"], correct: 1 },
            { question: "15. Which teaching method emphasizes the teacher as the central figure and knowledge dispenser?", options: ["Inquiry-based learning", "Cooperative learning", "Teacher-centered methods", "Project-based learning"], correct: 2 },
            { question: "16. In a lecture, the flow of communication is primarily:", options: ["Student to student", "Student to teacher", "Teacher to student", "Group to individual"], correct: 2 },
            { question: "17. A teacher showing students how to properly use a microscope is an example of the ____ method.", options: ["discussion", "lecture", "demonstration", "inquiry"], correct: 2 },
            { question: "18. Which of these is crucial for maintaining student attention during a lecture?", options: ["Long, uninterrupted speaking segments", "Interactive elements and pauses for questions", "Complex vocabulary", "Strict silence from students"], correct: 1 },
            { question: "19. The demonstration method is often followed by:", options: ["Another lecture on a different topic", "Student practice or hands-on activity", "A lengthy written exam", "Independent reading"], correct: 1 },
            { question: "20. Teacher-centered approaches are generally more efficient for:", options: ["Developing creative solutions", "Transmitting factual information to large groups", "Fostering deep conceptual understanding", "Encouraging self-directed learning"], correct: 1 },

            // Student-Centered Methods (Discussion, Inquiry-Based, Project Method, Cooperative Learning) - 20 questions
            { question: "21. In a discussion method, the teacher acts as a:", options: ["Sole authority", "Facilitator and guide", "Passive observer", "Lecturer"], correct: 1 },
            { question: "22. The discussion method primarily aims to:", options: ["Transmit factual information", "Promote active participation and critical thinking", "Ensure rote memorization", "Maintain strict classroom control"], correct: 1 },
            { question: "23. Inquiry-based learning starts with:", options: ["A teacher-provided solution", "A question, problem, or scenario", "A detailed lecture", "A final exam"], correct: 1 },
            { question: "24. A key feature of inquiry-based learning is that students are encouraged to:", options: ["Memorize facts without questioning", "Ask questions, investigate, and construct their own understanding", "Rely solely on textbooks", "Avoid collaborative work"], correct: 1 },
            { question: "25. The Project Method involves students working on a task that is:", options: ["Abstract and theoretical", "Driven by a real-world problem or challenge", "Solely teacher-directed", "Completed individually without collaboration"], correct: 1 },
            { question: "26. Which of the following is a benefit of the Project Method?", options: ["Limited creativity", "Development of practical skills and deeper understanding", "Reduced student motivation", "Exclusive focus on theoretical knowledge"], correct: 1 },
            { question: "27. Cooperative learning emphasizes:", options: ["Individual competition", "Students working together in small groups to achieve a common goal", "Teacher-led instruction only", "Silent, independent work"], correct: 1 },
            { question: "28. A core principle of cooperative learning is:", options: ["Negative interdependence", "Individual accountability and positive interdependence", "Teacher as the sole decision-maker", "Minimal interaction among students"], correct: 1 },
            { question: "29. In a student-centered classroom, the focus shifts from:", options: ["Student to teacher", "Teacher to student", "Content to assessment", "Memorization to rote learning"], correct: 1 },
            { question: "30. Which method allows students to explore topics based on their own curiosity?", options: ["Lecture", "Demonstration", "Inquiry-based learning", "Direct instruction"], correct: 2 },
            { question: "31. Effective discussions require students to:", options: ["Remain silent", "Listen, articulate ideas, and respond respectfully", "Only agree with the teacher", "Compete for speaking time"], correct: 1 },
            { question: "32. The role of the teacher in inquiry-based learning is to:", options: ["Provide all answers", "Facilitate the inquiry process and provide resources", "Dictate the learning outcomes", "Ignore student questions"], correct: 1 },
            { question: "33. When implementing the Project Method, assessment often includes:", options: ["Only a final written test", "Evaluation of the process, product, and collaboration", "Solely teacher observation", "Standardized tests"], correct: 1 },
            { question: "34. Cooperative learning often leads to improved social skills because students:", options: ["Work in isolation", "Are forced to compete", "Learn to communicate and resolve conflicts", "Only interact with the teacher"], correct: 2 },
            { question: "35. Which of these is a hallmark of student-centered approaches?", options: ["Rigid curriculum", "Active student participation and construction of knowledge", "Teacher as the sole authority", "Emphasis on passive reception of information"], correct: 1 },
            { question: "36. A Socratic seminar is an example of a type of ____ method.", options: ["lecture", "demonstration", "discussion", "direct instruction"], correct: 2 },
            { question: "37. In inquiry-based learning, students often engage in activities like:", options: ["Listening to long lectures", "Conducting experiments, research, and data analysis", "Copying notes from the board", "Memorizing definitions"], correct: 1 },
            { question: "38. The Project Method encourages students to take ____ of their learning.", options: ["minimal responsibility", "full ownership", "no part", "only a small part"], correct: 1 },
            { question: "39. For cooperative learning to be successful, group members must:", options: ["Work independently", "Ensure everyone contributes and learns", "Let one person do all the work", "Compete against each other"], correct: 1 },
            { question: "40. Student-centered methods aim to foster:", options: ["Dependence on the teacher", "Rote memorization", "Autonomy, critical thinking, and problem-solving", "Uniform learning outcomes for all students"], correct: 2 },

            // Modern Strategies (Flipped Classroom, Problem-Based Learning) - 20 questions
            { question: "41. In a Flipped Classroom model, what typically happens at home?", options: ["Group projects", "Lectures or direct instruction via videos/readings", "Hands-on experiments", "Debates"], correct: 1 },
            { question: "42. What is the main purpose of class time in a Flipped Classroom?", options: ["To introduce new content through lecture", "To engage in active learning, problem-solving, and discussion", "To take individual tests", "To watch educational videos"], correct: 1 },
            { question: "43. Problem-Based Learning (PBL) begins with:", options: ["A solved problem", "A complex, real-world problem or challenge", "A set of textbook definitions", "A teacher-led lecture on solutions"], correct: 1 },
            { question: "44. In PBL, students typically work in groups to:", options: ["Memorize facts about the problem", "Identify what they know, what they need to know, and how to find solutions", "Listen to the teacher explain the problem", "Complete individual worksheets"], correct: 1 },
            { question: "45. A benefit of the Flipped Classroom is that it allows teachers to:", options: ["Spend less time teaching", "Provide more individualized support during class time", "Avoid preparing lessons", "Reduce student interaction"], correct: 1 },
            { question: "46. Problem-Based Learning is effective for developing:", options: ["Rote memorization skills", "Passive listening skills", "Critical thinking, research, and collaboration skills", "Strict adherence to instructions"], correct: 2 },
            { question: "47. Which modern strategy leverages technology to deliver content outside of class?", options: ["PBL", "Cooperative Learning", "Flipped Classroom", "Discussion Method"], correct: 2 },
            { question: "48. In PBL, the teacher's role is primarily that of a:", options: ["Lecturer", "Expert who provides all answers", "Facilitator and mentor", "Disciplinarian"], correct: 2 },
            { question: "49. The Flipped Classroom model aims to shift the focus of learning from:", options: ["Active to passive", "Teacher-led instruction to student-centered activities in class", "Homework to no homework", "Collaboration to individual work"], correct: 1 },
            { question: "50. Which modern strategy promotes self-directed learning and real-world application?", options: ["Lecture", "Demonstration", "Problem-Based Learning", "Direct Instruction"], correct: 2 },
            { question: "51. A key challenge in implementing a Flipped Classroom is:", options: ["Students' access to technology and self-discipline for pre-class work", "Teachers having too much free time", "Lack of content available online", "Reduced need for classroom management"], correct: 0 },
            { question: "52. PBL often involves students presenting their findings, which helps develop:", options: ["Their ability to avoid public speaking", "Communication and presentation skills", "Reliance on teacher feedback only", "Individual isolation"], correct: 1 },
            { question: "53. In a Flipped Classroom, formative assessment often takes place:", options: ["Only at the end of the unit", "During class time through active engagement and teacher observation", "Only through standardized tests", "Before any content is introduced"], correct: 1 },
            { question: "54. Problem-Based Learning encourages students to become active ____ of knowledge.", options: ["recipients", "consumers", "constructors", "imitators"], correct: 2 },
            { question: "55. Which of these is a characteristic of both Flipped Classroom and PBL?", options: ["Teacher as the sole source of knowledge", "Emphasis on passive learning", "Student-centered approach and active engagement", "Strict adherence to a fixed curriculum"], correct: 2 },
            { question: "56. The flexibility of content delivery is a major advantage of the ____ model.", options: ["traditional lecture", "demonstration", "flipped classroom", "direct instruction"], correct: 2 },
            { question: "57. PBL typically requires students to engage in extensive:", options: ["Memorization of facts", "Independent research and critical analysis", "Copying notes from the board", "Listening to long lectures"], correct: 1 },
            { question: "58. What is a potential challenge for students in a Flipped Classroom?", options: ["Less homework", "Difficulty in completing pre-class work independently", "More teacher support", "Easier understanding of concepts"], correct: 1 },
            { question: "59. Problem-Based Learning fosters skills that are highly relevant to:", options: ["Rote learning environments", "Real-world professional and academic challenges", "Strictly theoretical subjects", "Individual, isolated work"], correct: 1 },
            { question: "60. Both Flipped Classroom and PBL aim to maximize ____ learning time.", options: ["teacher-led", "passive", "active", "individual"], correct: 2 }
        ];

        let userAnswers = {};
        let currentQuestionIndex = 0;
        let timerSeconds = 60 * 60; // 60 minutes for 60 questions
        let timerInterval;
        let userName = '';

        const nameEntryContainer = document.getElementById('name-entry-container');
        const quizContentWrapper = document.getElementById('quiz-content-wrapper');
        const nameInput = document.getElementById('name-input');
        const startBtn = document.getElementById('start-btn');
        const quizForm = document.getElementById('quiz-form');
        const resultsContainer = document.getElementById('results-container');
        const timerDisplay = document.getElementById('timer');
        const modal = document.getElementById('validation-modal');
        const modalMessage = document.getElementById('modal-message');
        const modalCloseBtn = document.getElementById('modal-close-btn');
        const printBtn = document.getElementById('print-btn');
        const downloadBtn = document.getElementById('download-btn');
        const userNameResult = document.getElementById('user-name-result');
        const fullQuizReview = document.getElementById('full-quiz-review');

        // Function to render a single question on the page
        function renderQuestion(index) {
            quizForm.innerHTML = ''; // Clear previous questions
            const q = allQuestions[index];

            const questionBox = document.createElement('div');
            questionBox.className = 'bg-slate-100 p-6 rounded-2xl shadow-lg mb-6';
            
            const questionText = document.createElement('p');
            // Changed color to bright red
            questionText.className = 'text-lg sm:text-xl font-bold font-georgia text-[#FF0000] mb-4 flex items-center'; 
            
            const questionNumberSpan = document.createElement('span');
            questionNumberSpan.className = 'question-number-circle';
            questionNumberSpan.textContent = (index + 1);
            questionText.appendChild(questionNumberSpan);
            
            const questionContentSpan = document.createElement('span');
            // Remove any HTML tags from the question string before setting innerHTML
            questionContentSpan.textContent = q.question.substring(q.question.indexOf('.') + 2).replace(/<\/?span[^>]*>/g, ""); 
            questionText.appendChild(questionContentSpan);

            questionBox.appendChild(questionText);

            q.options.forEach((option, optionIndex) => {
                const label = document.createElement('label');
                label.className = 'quiz-option-label relative flex items-center p-4 mb-3 rounded-xl bg-white border border-gray-200 cursor-pointer transition-all duration-300 ease-in-out';
                
                const input = document.createElement('input');
                input.type = 'radio';
                input.name = `question-${index}`;
                input.value = optionIndex;
                
                const optionSpan = document.createElement('span');
                optionSpan.className = 'ml-3 text-base sm:text-lg text-gray-800 font-medium';
                // Ensure options are plain text
                optionSpan.textContent = option; 
                
                label.appendChild(input);
                label.appendChild(optionSpan);
                questionBox.appendChild(label);
            });

            // Add navigation buttons to the question box
            const navButtonsDiv = document.createElement('div');
            navButtonsDiv.className = 'flex justify-between mt-6 space-x-4';
            
            // Previous Button
            const prevBtn = document.createElement('button');
            prevBtn.id = 'prev-btn';
            prevBtn.textContent = 'Previous';
            prevBtn.className = 'w-full text-white font-bold py-3.5 rounded-full shadow-lg transition-colors bg-gray-500 hover:bg-gray-600 no-zoom';
            prevBtn.addEventListener('click', previousQuestion);

            // Hide the previous button on the first question
            if (currentQuestionIndex === 0) {
                prevBtn.classList.add('hidden');
            }

            // Next/Submit Button
            let nextBtn;
            if (currentQuestionIndex === allQuestions.length - 1) {
                nextBtn = document.createElement('button');
                nextBtn.id = 'submit-btn';
                nextBtn.textContent = 'Submit Quiz';
                nextBtn.className = 'w-full text-white font-bold py-3.5 rounded-full shadow-lg transition-colors submit-btn no-zoom';
                nextBtn.addEventListener('click', submitQuiz);
            } else {
                nextBtn = document.createElement('button');
                nextBtn.id = 'next-btn';
                nextBtn.textContent = 'Next';
                nextBtn.className = 'w-full text-white font-bold py-3.5 rounded-full shadow-lg transition-colors bg-blue-600 hover:bg-blue-700 no-zoom';
                nextBtn.addEventListener('click', nextQuestion);
            }
            
            navButtonsDiv.appendChild(prevBtn);
            navButtonsDiv.appendChild(nextBtn);
            questionBox.appendChild(navButtonsDiv);
            
            quizForm.appendChild(questionBox);
            
            // Highlight the previously selected answer if it exists
            if (userAnswers[index] !== undefined) {
                const selectedLabel = quizForm.querySelector(`input[name="question-${index}"][value="${userAnswers[index]}"]`).closest('label');
                if (selectedLabel) {
                    selectedLabel.classList.add('selected');
                    selectedLabel.querySelector('input').checked = true; // Set the radio button as checked
                }
            }

            // Add event listeners for new radio buttons
            const radioButtons = quizForm.querySelectorAll('input[type="radio"]');
            radioButtons.forEach(radio => {
                radio.addEventListener('change', (event) => {
                    const parentLabel = event.target.closest('label');
                    const questionBox = parentLabel.closest('div');
                    
                    // Remove 'selected' class from all other labels in the same question
                    questionBox.querySelectorAll('label').forEach(label => {
                        label.classList.remove('selected');
                    });
                    
                    // Add 'selected' class to the currently chosen label
                    parentLabel.classList.add('selected');
                });
            });
        }
        
        // Function to start the countdown timer
        function startTimer() {
            timerInterval = setInterval(() => {
                timerSeconds--;
                const minutes = Math.floor(timerSeconds / 60);
                const seconds = timerSeconds % 60;
                timerDisplay.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                
                if (timerSeconds <= 0) {
                    clearInterval(timerInterval);
                    timerDisplay.textContent = "Time's up!";
                    submitQuiz();
                }
            }, 1000);
        }

        // Function to show the custom validation modal
        function showModal(message) {
            modalMessage.textContent = message;
            modal.classList.add('active');
            modal.classList.remove('hidden');
        }

        // Function to move to the next question
        function nextQuestion() {
            const selected = document.querySelector(`input[name="question-${currentQuestionIndex}"]:checked`);
            if (!selected) {
                showModal("Please select an option before moving to the next question.");
                return;
            }
            userAnswers[currentQuestionIndex] = parseInt(selected.value);
            
            currentQuestionIndex++;
            if (currentQuestionIndex < allQuestions.length) {
                renderQuestion(currentQuestionIndex);
            }
        }
        
        // Function to move to the previous question
        function previousQuestion() {
            // Save the current answer before moving back
            const selected = document.querySelector(`input[name="question-${currentQuestionIndex}']:checked`);
            if (selected) {
                userAnswers[currentQuestionIndex] = parseInt(selected.value);
            }
            
            currentQuestionIndex--;
            if (currentQuestionIndex >= 0) {
                renderQuestion(currentQuestionIndex);
            }
        }
        
        // New function to start the quiz after name entry
        function startQuiz() {
            const name = nameInput.value.trim();
            if (!name) {
                showModal("Please enter your name to start the quiz.");
                return;
            }
            userName = name;
            nameEntryContainer.classList.add('hidden');
            quizContentWrapper.classList.remove('hidden');
            renderQuestion(currentQuestionIndex);
            startTimer();
        }

        // Function to render the full quiz results with correct and incorrect answers highlighted
        function renderFullResults() {
            fullQuizReview.innerHTML = ''; // Clear previous review
            
            allQuestions.forEach((q, index) => {
                const questionReviewItem = document.createElement('div');
                questionReviewItem.className = 'quiz-review-item';
                
                const questionText = document.createElement('p');
                questionText.className = 'quiz-review-question';
                // Ensure the question content is correctly displayed, including any red highlighting
                questionText.innerHTML = `<span class="question-number-circle">${index + 1}</span> ${q.question.substring(q.question.indexOf('.') + 2)}`;
                questionReviewItem.appendChild(questionText);

                q.options.forEach((option, optionIndex) => {
                    const optionDiv = document.createElement('div');
                    optionDiv.className = 'quiz-review-option';
                    
                    const isCorrect = optionIndex === q.correct;
                    const isUserAnswer = userAnswers[index] === optionIndex;

                    // Apply green for correct answer
                    if (isCorrect) {
                        optionDiv.classList.add('correct');
                        optionDiv.innerHTML = `✅ ${option}`;
                    } 
                    // Apply red for incorrect user answer
                    else if (isUserAnswer) {
                        optionDiv.classList.add('incorrect');
                        optionDiv.innerHTML = `❌ ${option}`;
                    }
                    // Default styling for other options
                    else {
                        optionDiv.innerHTML = `${String.fromCharCode(65 + optionIndex)}. ${option}`;
                    }
                    
                    questionReviewItem.appendChild(optionDiv);
                });
                
                fullQuizReview.appendChild(questionReviewItem);
            });
        }

        // Function to submit the quiz and display results
        function submitQuiz() {
            clearInterval(timerInterval); // Stop the timer
            
            // Check if the final question is answered
            const selected = document.querySelector(`input[name="question-${currentQuestionIndex}"]:checked`);
            if (!selected) {
                showModal("Please select an option before submitting.");
                return;
            }
            userAnswers[currentQuestionIndex] = parseInt(selected.value);

            // Disable all radio buttons and buttons after submission
            const allRadios = quizForm.querySelectorAll('input[type="radio"]');
            allRadios.forEach(radio => radio.disabled = true);

            let score = 0;
            allQuestions.forEach((q, index) => {
                if (userAnswers[index] === q.correct) {
                    score++;
                }
            });

            // Display results
            userNameResult.textContent = `Quiz Taker: ${userName}`;
            document.getElementById('total-questions').textContent = allQuestions.length;
            document.getElementById('obtained-marks').textContent = score;
            
            // Render the full quiz review
            renderFullResults();

            // Hide quiz, show results container
            quizContentWrapper.classList.add('hidden');
            resultsContainer.classList.remove('hidden');
            resultsContainer.scrollIntoView({ behavior: 'smooth' });
        }
        
        // Event listeners
        document.addEventListener('DOMContentLoaded', () => {
            // Show the name entry screen by default
            nameEntryContainer.classList.remove('hidden');
        });
        
        startBtn.addEventListener('click', startQuiz);
        
        modalCloseBtn.addEventListener('click', () => {
            modal.classList.add('hidden');
            modal.classList.remove('active');
        });
        
        // Event listener for the "Print Result" button
        printBtn.addEventListener('click', () => {
            window.print();
        });
        
        // Event listener for the "Download Result Card" button
        downloadBtn.addEventListener('click', () => {
            const headerContent = document.getElementById('header').innerHTML;
            const footerContent = document.getElementById('footer').innerHTML;
            const userName = document.getElementById('user-name-result').textContent;
            const totalQuestions = document.getElementById('total-questions').textContent;
            const obtainedMarks = document.getElementById('obtained-marks').textContent;

            // Create a temporary, hidden container for the image generation
            const tempContainer = document.createElement('div');
            tempContainer.id = 'download-result-container';
            document.body.appendChild(tempContainer);

            // Get current date and time
            const now = new Date();
            const dateStr = `${String(now.getDate()).padStart(2, '0')}/${String(now.getMonth() + 1).padStart(2, '0')}/${now.getFullYear()}`;
            const timeStr = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}:${String(now.getSeconds()).padStart(2, '0')}`;
            
            // Build the simplified content for the image
            tempContainer.innerHTML = `
                <div class="header-clone">${headerContent}</div>
                <div class="results-clone">
                    <h2 class="text-3xl font-extrabold text-center mb-4 text-green-700">Quiz Results</h2>
                    <p class="text-lg mb-1 text-center font-bold text-gray-700">Pedagogy MCQs for SSTs</p>
                    <p class="text-lg mb-3 text-center font-extrabold text-green-600">${userName}</p>
                    <p class="text-lg text-gray-700 mt-4 text-center">Date: ${dateStr} - Time: ${timeStr}</p>
                    <p class="text-lg mb-3 text-center">
                        Total Questions: <span class="font-extrabold text-green-600">${totalQuestions}</span>
                    </p>
                    <p class="text-lg mb-6 text-center">
                        Obtained Marks: <span class="font-extrabold text-green-600">${obtainedMarks}</span>
                    </p>
                </div>
                <div class="footer-clone">${footerContent}</div>
            `;
            
            // Use html2canvas to capture the content of the temporary container
            html2canvas(tempContainer, {
                scale: 2, // Increase scale for a higher-quality image
                useCORS: true,
                backgroundColor: '#ffffff'
            }).then(canvas => {
                const image = canvas.toDataURL('image/png');
                const link = document.createElement('a');
                link.href = image;
                link.download = 'SST_Test_Result_Card.png';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }).finally(() => {
                // Clean up the temporary container
                document.body.removeChild(tempContainer);
            });
        });
    </script>
</body>
</html>
